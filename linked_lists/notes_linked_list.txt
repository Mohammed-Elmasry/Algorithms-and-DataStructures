some notes on construction of linked lists.


#1 don't forget to assign the members to default values (null / data member value) just after construction.

#2insertion at the beginning of a linked list is O(1) and would be O(n) otherwise (you don't need to find where to insert in the first case but that's not true otherwise).

#3 searching by a loop while the current pointer != null is O(n) as well because I don't know when I will find that cell I'm looking for.

#4 if you want 1 pointer in your code and you want it to loop on a linked list and after the loop exists, it would be standing at the end of the linked list, then check if the NEXT of that pointer is not null.

#5 linking a newly created cell to already existing lists from its side is easier and could be done as first step.

#6 trying to access the pNext/pPrev of null gives a segmentation fault error (core dumped). This
means you're trying to access a part of the memory that's not allocated.

#7 when looping using while loops, make sure the more general condition is tested first.
(i.e. necessary conditions are tested first in a loop).
do i need to be not null to have data or do I need to have data to not be null ? (as a node)

You need to be not null (be actual node) so we can start talking about your data.

note that: this happens only in compound conditional while loops.


#8 You don't need to reverse a doubly linked list because traversing the linked list from the tail will produce the same result.

#9 on defining insertAt() for linked lists, it is safe to design the function in such a way that would result in an error if the list being referenced is already empty. Because a linked list doesn't have an index in the first place, you would make this a good excuse that the function will not work unless there is at, least, an element in the list.

#10 when using find() it is better to return a pointer to the found element (if found at all) because it will enable the user to make further processes on the found and retrieved method. What good does it make when you return the number of the found element? Nothing...